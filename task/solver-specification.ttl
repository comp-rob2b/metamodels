@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix slv: <https://comp-rob2b.github.io/metamodels/task/solver-specification#> .
@prefix qudt_quant: <http://qudt.org/vocab/quantitykind/> .
@prefix kc_ent: <https://comp-rob2b.github.io/metamodels/kinematic-chain/structural-entities#> .
@prefix kc_stat: <https://comp-rob2b.github.io/metamodels/kinematic-chain/state#> .
@prefix geom_coord: <https://comp-rob2b.github.io/metamodels/geometry/coordinates#> .
@prefix dyn_coord: <https://comp-rob2b.github.io/metamodels/newtonian-rigid-body-dynamics/coordinates#> .
@prefix geom: <https://comp-rob2b.github.io/metamodels/geometry/structural-entities#> .

slv:
    a owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        sh:prefix "slv" ;
        sh:namespace "https://comp-rob2b.github.io/metamodels/task/solver-specification#"^^xsd:anyURI ;
    ] ;
    sh:declare [
        sh:prefix "dyn_coord" ;
        sh:namespace "https://comp-rob2b.github.io/metamodels/newtonian-rigid-body-dynamics/coordinates#"^^xsd:anyURI ;
    ] .

slv:VelocityCompositionSolver
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:velocity ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class geom_coord:VelocityTwistCoordinate
    ] .

slv:ForceDistributionSolver
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:force ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class dyn_coord:WrenchCoordinate
    ] .

slv:SolverWithInputAndOutput
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:motion-drivers ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:MotionDrivers
    ] ;
    sh:property [
        sh:path slv:output ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI
    ] ;
    sh:property [
        sh:path slv:root ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class geom:Frame
    ] ;
    sh:property [
        sh:path slv:gravity ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class dyn_coord:UniformGravitationalFieldCoordinate
    ] ;
    sh:property [
        sh:path slv:solver ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:in (
            slv:RecursiveNewtonEulerAlgorithm
            slv:ArticulatedBodyAlgorithm
            slv:AccelerationConstrainedHybridDynamicsAlgorithm
        )
    ] ;
    sh:sparql [
        a sh:SPARQLConstraint ;
        sh:prefixes slv: , dyn_coord: ;
        sh:message "Gravity must be expressed in the root frame" ;
        sh:select """
            SELECT $this ?value
            WHERE {
                $this slv:gravity / dyn_coord:as-seen-by ?value .
                FILTER NOT EXISTS { $this slv:root ?value } .
            }
        """
    ] .

slv:MotionDrivers
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:joint-acceleration ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:JointAccelerationSpecification
    ] ;
    sh:property [
        sh:path slv:joint-force ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:JointForceSpecification
    ] ;
    sh:property [
        sh:path slv:cartesian-force ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:CartesianForceSpecification
    ] ;
    sh:property [
        sh:path slv:acceleration-constraint ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:AccelerationConstraintSpecification
    ] ;
    sh:property [
        sh:path slv:prioritization ;
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:Prioritization
    ] .

slv:JointAccelerationSpecification
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:acceleration ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class kc_stat:JointAccelerationCoordinate
    ] ;
    sh:property [
        sh:path slv:attached-to ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class kc_ent:Joint
    ] .

slv:JointForceSpecification
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:force ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class kc_stat:JointForceCoordinate
    ] ;
    sh:property [
        sh:path slv:attached-to ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class kc_ent:Joint
    ] .

slv:CartesianForceSpecification
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:force ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class dyn_coord:WrenchCoordinate
    ] ;
    sh:property [
        sh:path slv:attached-to ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class geom:SimplicialComplex
    ] .

slv:AccelerationConstraintSpecification
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:constraints ;
        sh:minCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class slv:AccelerationConstraint
    ] ;
    sh:property [
        sh:path slv:attached-to ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class geom:SimplicialComplex
    ] .

slv:Prioritization
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:higher ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:xone (
            [ sh:class slv:JointAccelerationSpecification ]
            [ sh:class slv:JointForceSpecification ]
            [ sh:class slv:CartesianForceSpecification ]
            [ sh:class slv:AccelerationConstraintSpecification ]
        )
    ] ;
    sh:property [
        sh:path slv:lower ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:xone (
            [ sh:class slv:JointAccelerationSpecification ]
            [ sh:class slv:JointForceSpecification ]
            [ sh:class slv:CartesianForceSpecification ]
            [ sh:class slv:AccelerationConstraintSpecification ]
        )
    ] .

slv:AccelerationConstraint
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:acceleration-energy ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:class qudt_quant:AccelerationEnergy
    ] .

slv:AxisAligned
    a rdfs:Class, sh:NodeShape ;
    sh:property [
        sh:path slv:subspace ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:in ( slv:angular-acceleration slv:linear-acceleration )
    ] ;
    sh:property [
        sh:path slv:axis ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:in ( slv:x slv:y slv:z )
    ] .
